//
//  vnPicture.cpp
//  vngfx
//
//  Created by Wayne on 13-12-10.
//  Copyright (c) 2013 viichi.com. All rights reserved.
//

#include "vnPicture.h"

_vn_begin

Picture & Picture::buildTexcoord(const aabox2f &rect) {
    texcoord[0] = rect.min_corner;
    texcoord[1].set(rect.max_corner.x, rect.min_corner.y);
    texcoord[2] = rect.max_corner;
    texcoord[3].set(rect.min_corner.x, rect.max_corner.y);
    return *this;
}

Picture & Picture::buildTexcoord(const vector2f &size, const aabox2f &rect) {
    aabox2f box = rect / size;
    texcoord[0] = box.min_corner;
    texcoord[1].set(box.max_corner.x, box.min_corner.y);
    texcoord[2] = box.max_corner;
    texcoord[3].set(box.min_corner.x, box.max_corner.y);
    return *this;
}

Picture & Picture::flip_horizontal()
{
	math::swap(texcoord[0], texcoord[1]);
	math::swap(texcoord[2], texcoord[3]);
	return *this;
}


Picture & Picture::flip_vertical()
{
	math::swap(texcoord[0], texcoord[3]);
	math::swap(texcoord[1], texcoord[2]);
	return *this;
}

Picture & Picture::rotate_90()
{	
	math::swap(texcoord[0], texcoord[1]);
	math::swap(texcoord[0], texcoord[2]);
	math::swap(texcoord[0], texcoord[3]);
	return *this;
}

Picture & Picture::rotate_180()
{
	math::swap(texcoord[0], texcoord[2]);
	math::swap(texcoord[1], texcoord[3]);
	return *this;
}

Picture & Picture::rotate_270()
{
	math::swap(texcoord[0], texcoord[1]);
	math::swap(texcoord[1], texcoord[3]);
	math::swap(texcoord[1], texcoord[2]);
	return *this;
}
_vn_end